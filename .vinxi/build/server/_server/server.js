import{isPlainObject as u,isRedirect as E,isNotFound as v}from"@tanstack/react-router";import $ from"tiny-invariant";import{AsyncLocalStorage as q}from"node:async_hooks";import{H3Event as w,getResponseStatus as j,getRequestURL as H,getRequestWebStream as D,getHeaders as L,eventHandler as N}from"h3";import{getContext as z}from"unctx";const f={stringify:e=>JSON.stringify(e,function(n,r){const o=this[n],c=l.find(a=>a.stringifyCondition(o));return c?c.stringify(o):r}),parse:e=>JSON.parse(e,function(n,r){const o=this[n];if(u(o)){const c=l.find(a=>a.parseCondition(o));if(c)return c.parse(o)}return r}),encode:e=>{if(Array.isArray(e))return e.map(n=>f.encode(n));if(u(e))return Object.fromEntries(Object.entries(e).map(([n,r])=>[n,f.encode(r)]));const t=l.find(n=>n.stringifyCondition(e));return t?t.stringify(e):e},decode:e=>{if(u(e)){const t=l.find(n=>n.parseCondition(e));if(t)return t.parse(e)}return Array.isArray(e)?e.map(t=>f.decode(t)):u(e)?Object.fromEntries(Object.entries(e).map(([t,n])=>[t,f.decode(n)])):e}},d=(e,t,n,r)=>({key:e,stringifyCondition:t,stringify:o=>({[`$${e}`]:n(o)}),parseCondition:o=>Object.hasOwn(o,`$${e}`),parse:o=>r(o[`$${e}`])}),l=[d("undefined",e=>e===void 0,()=>0,()=>{}),d("date",e=>e instanceof Date,e=>e.toISOString(),e=>new Date(e)),d("error",e=>e instanceof Error,e=>({...e,message:e.message,stack:void 0,cause:e.cause}),e=>Object.assign(new Error(e.message),e)),d("formData",e=>e instanceof FormData,e=>{const t={};return e.forEach((n,r)=>{const o=t[r];o!==void 0?Array.isArray(o)?o.push(n):t[r]=[o,n]:t[r]=n}),t},e=>{const t=new FormData;return Object.entries(e).forEach(([n,r])=>{Array.isArray(r)?r.forEach(o=>t.append(n,o)):t.append(n,r)}),t}),d("bigint",e=>typeof e=="bigint",e=>e.toString(),e=>BigInt(e))];function M(e){let t;const n=T(e),r={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(n,{...r,body:e.node.req.body}):new Request(n,{...r,get body(){return t||(t=B(e),t)}})}function P(e){return e.web??(e.web={request:M(e),url:T(e)}),e.web.request}function I(){return O()}const x=Symbol("$HTTPEvent");function W(e){return typeof e=="object"&&(e instanceof w||e?.[x]instanceof w||e?.__is_event__===!0)}function h(e){return function(...t){var n;let r=t[0];if(W(r))t[0]=r instanceof w||r.__is_event__?r:r[x];else{if(!((n=globalThis.app.config.server.experimental)!=null&&n.asyncContext))throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(r=I(),!r)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");t.unshift(r)}return e(...t)}}const T=h(H),J=h(j),U=h(L),B=h(D);function V(){var e;return z("nitro-app",{asyncContext:!!((e=globalThis.app.config.server.experimental)!=null&&e.asyncContext),AsyncLocalStorage:q})}function O(){return V().use().event}const G={},ne=N(K),g=G;async function K(e){const t=P(e),n=await X(t);return Object.entries(U()).forEach(([r,o])=>{r&&o&&(!n.headers.has(r)||!n.headers.get(r))&&r.toLowerCase()!=="content-length"&&n.headers.set(r,o)}),n}function Q(e){return e.replace(/^\/|\/$/g,"")}async function X(e,t){const n=e.method,r=new URL(e.url,"http://localhost:3000"),o=new RegExp(`${Q("/_server")}/([^/?#]+)`),c=r.pathname.match(o),a=c?c[1]:null,S=Object.fromEntries(r.searchParams.entries());if(typeof a!="string")throw new Error("Invalid server action param for serverFnId: "+a);const m=g[a];if(!m)throw console.log("serverFnManifest",g),new Error("Server function info not found for "+a);let p;if(p=await m.importer(),!p)throw console.log("serverFnManifest",g),new Error("Server function module not resolved for "+a);const b=p[m.functionName];if(!b)throw console.log("serverFnManifest",g),console.log("fnModule",p),new Error(`Server function module export not resolved for serverFn ID: ${a}`);const A=["multipart/form-data","application/x-www-form-urlencoded"],y=await(async()=>{try{const s=await(async()=>{if(e.headers.get("Content-Type")&&A.some(_=>{var R;return(R=e.headers.get("Content-Type"))==null?void 0:R.includes(_)}))return $(n.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await e.formData();if(n.toLowerCase()==="get")return S.payload?f.parse(S.payload):void 0;const F=await e.text();return f.parse(F)})(),i=await b(s);return i instanceof Response?i:u(i)&&"result"in i&&i.result instanceof Response?i.result:E(i)||v(i)?C(i):new Response(i!==void 0?f.stringify(i):void 0,{status:J(O()),headers:{"Content-Type":"application/json"}})}catch(s){return s instanceof Response?s:u(s)&&"result"in s&&s.result instanceof Response?s.result:E(s)||v(s)?C(s):(console.error("Server Fn Error!"),console.error(s),console.info(),new Response(f.stringify(s),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(y.headers.get("Content-Type")==="application/json"){const i=await y.clone().text();i&&JSON.stringify(JSON.parse(i))}return y}function C(e){const{headers:t,...n}=e;return new Response(JSON.stringify(n),{status:200,headers:{"Content-Type":"application/json",...t||{}}})}export{ne as default};
